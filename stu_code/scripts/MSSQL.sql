--COUNTS
SELECT COUNT(*) FROM PRESCRIPTIONS;
SELECT COUNT(*) FROM ADMISSIONS2;
SELECT COUNT(*) FROM LABEVENTS;
SELECT COUNT(*) FROM PATIENTS;
SELECT COUNT(*) FROM PROCEDURES_ICD;
SELECT COUNT(*) FROM DIAGNOSES_ICD
SELECT COUNT(*) FROM DIAGNOSES_ICD WHERE ICD9_CODE IN ('78552','99591','99592')  
SELECT COUNT(*) FROM CHARTEVENTS


--POSITIVE CASES
SELECT COUNT(DISTINCT P.SUBJECT_ID) FROM ADMISSIONS2 A INNER JOIN PATIENTS P ON P.SUBJECT_ID = A.SUBJECT_ID INNER JOIN DIAGNOSES_ICD D ON D.HADM_ID = A.HADM_ID WHERE ICD9_CODE IN ('78552','99591','99592')  

SELECT COUNT(DISTINCT P.SUBJECT_ID) FROM ADMISSIONS2 A INNER JOIN PATIENTS P ON P.SUBJECT_ID = A.SUBJECT_ID INNER JOIN DIAGNOSES_ICD D ON D.HADM_ID = A.HADM_ID WHERE ICD9_CODE NOT IN ('78552','99591','99592')  

SELECT COUNT(*), AGE_GROUP FROM PATIENTS2 GROUP BY AGE_GROUP


--***************************************  PATIENTS

--CALCULATE INDEX DATE FOR PATIENTS (LAST CHARTEVENT FOR NON SEPSIS PATIENTS, 30 DAYS FROM DOD FOR EXPIRED)
UPDATE P SET P.INDEX_DATE = C.INDEX_DATE FROM PATIENTS P, (
SELECT MAX(CHARTTIME) AS INDEX_DATE, CE.SUBJECT_ID  FROM CHARTEVENTS CE INNER JOIN PATIENTS P ON P.SUBJECT_ID = CE.SUBJECT_ID WHERE P.EXPIRE_FLAG = 0 GROUP BY CE.SUBJECT_ID 
) AS C WHERE P.SUBJECT_ID = C.SUBJECT_ID AND P.EXPIRE_FLAG = 0

UPDATE PATIENTS SET INDEX_DATE =DATEADD(DAY, -30, DOD) WHERE EXPIRE_FLAG = 1 --expired = true

UPDATE P  SET P.INDEX_DATE =  MAX(CE.CHARTTIME) FROM PATIENTS P INNER JOIN CHARTEVENTS CE ON P._SUBJECT_ID_ = CE._SUBJECT_ID_ GROUP BY P.SUBJECT_ID WHERE _EXPIRE_FLAG_ =  0  

SELECT TOP 1 * FROM ADMISSIONS
SELECT * INTO ADMISSIONS FROM ADMISSIONS 


DELETE FROM ADMISSIONS WHERE ROW_ID NOT IN(
SELECT A.ROW_ID FROM ADMISSIONS A INNER JOIN PATIENTS P ON P.SUBJECT_ID = A.SUBJECT_ID WHERE  A.ADMITTIME BETWEEN DATEADD(d, -2000, P.INDEX_DATE) AND P.INDEX_DATE) 



--CALCULATE PATIENT AGE
		
UPDATE  P SET P.FIRST_ADMISSIONTIME = C.FIRST_ADMITTIME FROM PATIENTS P, (
SELECT 
    P.SUBJECT_ID, P.DOB, P.GENDER, 
    MIN (A.ADMITTIME) AS FIRST_ADMITTIME
FROM PATIENTS P
INNER JOIN ADMISSIONS A
ON P.SUBJECT_ID = A.SUBJECT_ID
GROUP BY P.SUBJECT_ID, P.DOB, P.GENDER, A.HADM_ID
) C WHERE P.SUBJECT_ID = C.SUBJECT_ID




SELECT * INTO PATIENTS_AGE_2 FROM 
(SELECT 
      p.subject_id, p.dob, p.gender, MIN (a.admittime) AS first_admittime
     , MIN( ROUND( DATEDIFF(dd,DOB,a.ADMITTIME) / 365.242,2) ) AS first_admit_age
  FROM patients2 p
  INNER JOIN admissions2 a
  ON p.subject_id = a.subject_id
  GROUP BY p.subject_id, p.dob, p.gender
  ) C

)

UPDATE PATIENTS_AGE_2 SET AGE_GROUP = 

     (CASE
        -- all ages > 89 in the database were replaced with 300
        WHEN first_admit_age > 89
            then '>89'
		WHEN first_admit_age BETWEEN 60 AND 89
            then '60-89'
		WHEN first_admit_age BETWEEN 40 AND 60
            then '40-60'
		WHEN first_admit_age BETWEEN 26 AND 40
            then '26-40'
		 WHEN first_admit_age BETWEEN 14 AND 26
            then '15-26'
        WHEN first_admit_age <= 1
            THEN 'neonate'
        ELSE 'middle'
        END )


UPDATE PATIENTS2 SET AGE_GROUP_INDICATOR = 

     (CASE
        -- all ages > 89 in the database were replaced with 300
        WHEN AGE_GROUP ='>89'
            then '6'
		WHEN AGE_GROUP ='60-89'
            then '5'
		WHEN AGE_GROUP ='40-60'
            then '4'
		WHEN AGE_GROUP ='26-40'
            then '3'
		 WHEN AGE_GROUP ='15-26'
            then '2'
        WHEN AGE_GROUP ='neonate'
            THEN '1'
        ELSE '0'
        END )


UPDATE P SET P.AGE_GROUP = C.AGE_GROUP FROM PATIENTS2 P, PATIENTS_AGE_2 C WHERE P.SUBJECT_ID = C.SUBJECT_ID


-- SET GENDER_INDICATOR
UPDATE PATIENTS2 SET GENDER_INDICATOR = CASE
	WHEN GENDER = 'M' THEN '1'
	WHEN GENDER = 'F' THEN '0'
END


--REMOVE NEONATES
DELETE FROM PATIENTS WHERE AGE_GROUP = 'NEONATE' OR AGE_GROUP IS NULL
SELECT ROW_ID,SUBJECT_ID,GENDER,DOB,DOD,DOD_HOSP,DOD_SSN,EXPIRE_FLAG,FIRST_ADMISSIONTIME,AGE_GROUP,INDEX_DATE,TRIM(GENDER_INDICATOR) FROM PATIENTS

--OUTPUT  Right click query results and save as to stu_code/data/PATIENTS_X.csv OR Run this query and save results

DECLARE @OutputFile NVARCHAR(100) ,    @FilePath NVARCHAR(100) ,    @bcpCommand NVARCHAR(1000)
 
SET @bcpCommand = 'bcp "SELECT SUBJECT_ID,GENDER,GENDER_INDICATOR,EXPIRE_FLAG,AGE_GROUP_INDICATOR FROM PATIENTS
 " queryout '
SET @FilePath = 'path to stu_code/data'
SET @OutputFile = 'PATIENTS_X.csv'
SET @bcpCommand = @bcpCommand + @FilePath + @OutputFile + ' -c -t, -T -S'+ @@servername
exec master..xp_cmdshell @bcpCommand


--**************************************************PRESCRIPTIONS
--SELECT MAXIMUM PER UNIT FOR NORMALIZATION
SELECT C.MAXIMUM, C.FORM_UNIT_DISP INTO PRESCRIPTIONMAX FROM (SELECT MAX(FORM_VAL_DISP) AS MAXIMUM,FORM_UNIT_DISP FROM PRESCRIPTIONS WHERE ISNUMERIC(FORM_VAL_DISP)=1
 GROUP BY FORM_UNIT_DISP) C



--CREATE NUMERIC FEATURE VALUES

UPDATE PRESCRIPTIONS SET FEATUREVALUE = FORM_VAL_DISP WHERE ISNUMERIC(FORM_VAL_DISP)=1
UPDATE PRESCRIPTIONS SET FEATUREVALUE = SUBSTRING(FEATUREVALUE,CHARINDEX('.',FEATUREVALUE,0),3) WHERE ISNUMERIC(FORM_VAL_DISP)=1
UPDATE PRESCRIPTIONS SET FEATUREVALUE = NULL WHERE FEATUREVALUE = '.'


--NORMALIZE
UPDATE P SET P.FEATUREVALUE = CAST(P.FEATUREVALUE AS DECIMAL(38,7)) / CAST(M.MAXIMUM AS DECIMAL(38,7)) FROM PRESCRIPTIONS P, PRESCRIPTIONMAX M 
WHERE P.FORM_UNIT_DISP = M.FORM_UNIT_DISP 
AND ISNUMERIC(P.FEATUREVALUE)=1 AND ISNUMERIC(M.MAXIMUM) = 1
AND M.FORM_UNIT_DISP IS NOT NULL 
AND M.MAXIMUM IS NOT NULL
AND FEATUREVALUE IS NOT NULL
AND CAST(M.MAXIMUM AS DECIMAL(38,7)) > 0


--REMOVE RECORDS WITHOUT VALUES
DELETE FROM PRESCRIPTIONS WHERE FEATUREVALUE IS NULL

--OUTPUT  Right click query results and save as to stu_code/data/PRESCRIPTIONS_X.csv OR Run this query and save results

DECLARE @OutputFile NVARCHAR(100) ,    @FilePath NVARCHAR(100) ,    @bcpCommand NVARCHAR(1000)
 
SET @bcpCommand = 'bcp "SELECT ROW_ID,SUBJECT_ID, HADM_ID, DRUG, FEATUREVALUE FROM PRESCRIPTIONS
 " queryout '
SET @FilePath = 'path to stu_code/data'
SET @OutputFile = 'PRESCRIPTIONS_X.csv'
SET @bcpCommand = @bcpCommand + @FilePath + @OutputFile + ' -c -t, -T -S'+ @@servername
exec master..xp_cmdshell @bcpCommand





UPDATE PRESCRIPTIONS SET FEATUREVALUE = 0.2027 WHERE ROW_ID = 708449

--************************************ PROCEDURES





--OUTPUT  Right click query results and save as to stu_code/data/PROCEDURES_X.csv OR Run this query and save results

DECLARE @OutputFile NVARCHAR(100) ,    @FilePath NVARCHAR(100) ,    @bcpCommand NVARCHAR(1000)
 
SET @bcpCommand = 'bcp "SELECT PR.SUBJECT_ID, PR.ICD9_CODE, COUNT(1) AS FEATURECOUNT FROM PATIENTS P INNER JOIN ADMISSIONS A ON P.SUBJECT_ID = A.SUBJECT_ID LEFT JOIN DIAGNOSES_ICD D ON D.HADM_ID = A.HADM_ID 
INNER JOIN PROCEDURES_ICD PR ON PR.HADM_ID = A.HADM_ID WHERE D.ICD9_CODE IN ('''78552''','''99591''','''99592''') GROUP BY PR.SUBJECT_ID, PR.ICD9_CODE 
 " queryout '
SET @FilePath = 'path to stu_code/data'
SET @OutputFile = 'PROCEDURES_X.csv'
SET @bcpCommand = @bcpCommand + @FilePath + @OutputFile + ' -c -t, -T -S'+ @@servername
exec master..xp_cmdshell @bcpCommand





---LABEVENTS


--CREATE NUMERIC FEATURE VALUES


SELECT C.MAXIMUM, C.VALUEUOM INTO LABVALUEMAX FROM (SELECT MAX(VALUENUM) AS MAXIMUM,VALUEUOM FROM LABEVENTS WHERE ISNUMERIC(VALUENUM)=1
 GROUP BY VALUEUOM) C

UPDATE L SET L.FEATUREVALUE = VALUENUM  / M.MAXIMUM FROM LABEVENTS L, LABVALUEMAX M 
WHERE L.VALUEUOM = M.VALUEUOM 
AND ISNUMERIC(L.VALUENUM)=1 AND L.VALUENUM IS NOT NULL

--OUTPUT


--OUTPUT  Right click query results and save as to stu_code/data/LABEVENTS_X.csv OR Run this query and save results

DECLARE @OutputFile NVARCHAR(100) ,    @FilePath NVARCHAR(100) ,    @bcpCommand NVARCHAR(1000)
 
SET @bcpCommand = 'bcp "SELECT SUBJECT_ID,ITEMID,FEATUREVALUE FROM LABEVENTS " queryout '
SET @FilePath = 'path to stu_code/data'
SET @OutputFile = 'LABEVENTS_X.csv'
SET @bcpCommand = @bcpCommand + @FilePath + @OutputFile + ' -c -t, -T -S'+ @@servername
exec master..xp_cmdshell @bcpCommand



